/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  z as zod
} from 'zod';


/**
 * Returns a recipe by its unique identifier
 * @summary Get recipe by ID
 */
export const getRecipeByIdParams = zod.object({
  "recipe_id": zod.number()
})

/**
 * Updates an existing recipe by its ID and returns the updated recipe
 * @summary Update an existing recipe
 */
export const updateRecipeParams = zod.object({
  "recipe_id": zod.number()
})

export const updateRecipeBody = zod.object({
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "description": zod.string().optional(),
  "author": zod.object({
  "id": zod.uuid().optional(),
  "email": zod.string().optional()
}).optional(),
  "ingredients": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
})).optional()
})

/**
 * Deletes a recipe by its ID and returns a success message
 * @summary Delete a recipe
 */
export const deleteRecipeParams = zod.object({
  "recipe_id": zod.number()
})

/**
 * Creates a new recipe and returns the created recipe
 * @summary Create a new recipe
 */
export const createRecipeBody = zod.object({
  "id": zod.number().optional(),
  "title": zod.string().optional(),
  "description": zod.string().optional(),
  "author": zod.object({
  "id": zod.uuid().optional(),
  "email": zod.string().optional()
}).optional(),
  "ingredients": zod.array(zod.object({
  "id": zod.number().optional(),
  "name": zod.string().optional()
})).optional()
})

