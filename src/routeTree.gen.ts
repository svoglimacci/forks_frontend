/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRecipesRouteImport } from './routes/_auth/recipes'
import { Route as AuthPantryRouteImport } from './routes/_auth/pantry'
import { Route as AuthMealPlannerRouteImport } from './routes/_auth/meal-planner'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRecipesRoute = AuthRecipesRouteImport.update({
  id: '/recipes',
  path: '/recipes',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthPantryRoute = AuthPantryRouteImport.update({
  id: '/pantry',
  path: '/pantry',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthMealPlannerRoute = AuthMealPlannerRouteImport.update({
  id: '/meal-planner',
  path: '/meal-planner',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/meal-planner': typeof AuthMealPlannerRoute
  '/pantry': typeof AuthPantryRoute
  '/recipes': typeof AuthRecipesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/meal-planner': typeof AuthMealPlannerRoute
  '/pantry': typeof AuthPantryRoute
  '/recipes': typeof AuthRecipesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_auth/meal-planner': typeof AuthMealPlannerRoute
  '/_auth/pantry': typeof AuthPantryRoute
  '/_auth/recipes': typeof AuthRecipesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/meal-planner' | '/pantry' | '/recipes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/meal-planner' | '/pantry' | '/recipes'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/meal-planner'
    | '/_auth/pantry'
    | '/_auth/recipes'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/recipes': {
      id: '/_auth/recipes'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof AuthRecipesRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/pantry': {
      id: '/_auth/pantry'
      path: '/pantry'
      fullPath: '/pantry'
      preLoaderRoute: typeof AuthPantryRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/meal-planner': {
      id: '/_auth/meal-planner'
      path: '/meal-planner'
      fullPath: '/meal-planner'
      preLoaderRoute: typeof AuthMealPlannerRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthMealPlannerRoute: typeof AuthMealPlannerRoute
  AuthPantryRoute: typeof AuthPantryRoute
  AuthRecipesRoute: typeof AuthRecipesRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthMealPlannerRoute: AuthMealPlannerRoute,
  AuthPantryRoute: AuthPantryRoute,
  AuthRecipesRoute: AuthRecipesRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
